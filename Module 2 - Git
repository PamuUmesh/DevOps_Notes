Module-2
Git

Version Control with Git

Version Control, Git introduction, Git Installation, Commanly used VC's

Why need Version Control???

Collaborate
Concurrent Development
Tracking Changes
Backup Centralized solutions

Major problems - back up
VC helps the team to solve these kind of problems

How do we store the code base
projectshare\file 

Version Control?
Version control is a system that documents changes made to a file or a set of files.It allows multiple users to manage multiple revisions of the same
unit of information. it is a snapshot of your project over time.

Version Control Types:- 

Local Version Control (LVC)

Centralized Version Control(CVC) :- SVN, clearcase, BAZAAR, cmsyn

CENTRAL SERVER = Checkout - file -1

CENTRAL SERVER = Checkout - file -2

Issue:- In case of central server failure whole system goes down

Solution:- Distribution Version Control

Distribution Version Control := metadata records of changes

Remote Server = checkout - file = Version database

Remote Server = checkout - file = Version database

Version database is stored at every users local system& at the remote server.
User manipulate the local file

WHY Git???

Git is most popular control system.
Git Lab, Git hub
Use by all the organations world wide.

Why Git is a clear winner???

Snapshots = git records changes made to a file rather than file itself that means if a file isn't chnaged it isn't stored again.

Fast Operations = Almost every operation on git is local hence the speed offered by git is lightly fast comapared to other VCS's

Distributed = Every user has his own copy of the repository data stored locally allowing full functionality even on disconnection.

Branch handling = every collaborators working directly is in itself a branch different branches can be merged with ease.

Integrity = Check-sum before storing any users that you can't any changes to anything without git recording that change.

Robust = Nera every task in git is indorable & it is really hard to close

Git is a Open source

git --vesrion = Git command will get the latest version of git in our system
2.39.0.windows.2

Umesh DevOps

mkdir - make directory

mkdir 20221230> clone  URL of the git hub repository

clone = downloading files

explorer . 
open a seperate window

dir /a
all files will get

20221230> git status

20221230> git add README.md
git add program.py

git  . = enter -> all add
2 spaceses

20221230> git log = made changes on repository
will get 

Commit ID
Author
Date & Time
Commit Message

20221230> git push  = url form  = checking the status of files & list the logs

Cloning - Modification, Deletion, Addition
Staging Area -> 
Committing -> 
Move or Push to central Repository

20221230> git remote -V
place the where your URL stored

20221230> git Config 
Global user name or email








